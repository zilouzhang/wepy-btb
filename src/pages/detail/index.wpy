<style lang="less">
@import "../../wxParse/wxParse.wxss";
page,
.container {
  background: #fff;
}
.head {
  background-color: rgb(254, 219, 0);
  height: 463rpx;
  image {
    width: 750rpx;
  }
}
.title {
  padding: 68rpx 30rpx 46rpx;
  font-size: 34rpx;
  font-weight: 700;
  color: #1f1a17;
  line-height: 40rpx;
}
.timer {
  font-size: 28rpx;
  color: #1f1a17;
  text-align: center;
}
.article {
  padding: 40rpx 30rpx;
}
.btns {
  padding: 35rpx 0;
  font-size: 0;
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
}
.btns image,
.btns button {
  width: 222rpx;
  height: 104rpx;
}
.btns button {
  padding: 0;
  margin: 0 0 0 130rpx;
}
</style>
<template>
  <view class="container">
    <view class="head">
      <image data-id="head" src="/images/detail/head.png" style="height: {{headPicHeight}}rpx;" @tap="drawImg" @load="resizePic"/>
    </view>
    <view class="title">{{title}}</view>
    <view class="timer">{{timer}}</view>
    <import src="../../wxParse/wxParse.wxml" />
    <view class="article">
      <template is="wxParse" data="{{wxParseData:content.nodes}}"/>
    </view>
    <view class="btns">
      <image src="/images/detail/share.png" />
      <button open-type="share" hover-class="none">
        <image src="/images/detail/send.png" />
      </button>
    </view>
    <toast />
  </view>
</template>
<script>
import wepy from 'wepy';
import { Host } from 'config';
import { ScreenHeight, ScreenWidth, get } from 'utils';
import WxParse from 'wxParse/wxParse';
// components
// import Article from 'components/article';
import Toast from 'components/toast';
export default class Detail extends wepy.page {
  data = {
    title: '',
    timer: '',
    content: '',
    showSaveBtn: false,
    canvasHeight: ScreenHeight,
    headPicHeight: 0,
    linePicHeight: 0,
    tempFilePath: null
  };
  components = {
    toast: Toast
  };
  methods = {
    resizePic(e) {
      console.log(e);
      let { detail, currentTarget } = e;
      let { width, height } = detail;
      let { dataset } = currentTarget;
      let { id } = dataset;
      let ratio = height / width * 750;
      if (id === 'head') {
        this.headPicHeight = ratio;
      } else {
        this.linePicHeight = ratio;
      }
      this.$apply();
    },
    drawImg(e) {
      // 画图
      const headPicHeightPx = this.headPicHeight * (ScreenWidth / 750);
      const linePicHeightPx = this.linePicHeight * (ScreenWidth / 750);
      console.log(headPicHeightPx);
      const ctx = wepy.createCanvasContext('ds');
      ctx.drawImage(
        '/images/detail/head.png',
        0,
        0,
        ScreenWidth,
        headPicHeightPx
      );
      ctx.save();
      ctx.drawImage(
        '/images/detail/line.png',
        0,
        headPicHeightPx - 100,
        ScreenWidth,
        linePicHeightPx
      );
      ctx.draw(false, this.getTemplateImage('ds'));
    },
    saveImage() {
      // 保存图片
      let that = this;
      if (that.tempFilePath) {
        wepy.saveFile({
          tempFilePath: that.tempFilePath,
          success: res => {
            console.log(res.savedFilePath);
          }
        });
      }
    }
  };
  getTemplateImage(cId) {
    // 从canvas导出图片
    let that = this;
    wepy.canvasToTempFilePath({
      canvasId: cId,
      success: res => {
        that.showSaveBtn = true;
        that.tempFilePath = res.tempFilePath;
        that.$apply();
        console.log(that.tempFilePath);
      }
    });
  }
  // 获取文章数据
  getInit(id) {
    let _self = this;
    get(`${Host}detail/info`, {
      aid: id
    }).then(res => {
      let { title, time, content } = res;
      this.title = title || '';
      this.timer = time || '';
      content = content || '';
      this.$apply();
      WxParse.wxParse('content', 'html', content, _self, 5);
    }).catch(err => {
      this.$invoke('toast', 'show', err);
    });
  }
  onLoad(e) {
    this.getInit(e.id);
  }
}
</script>
