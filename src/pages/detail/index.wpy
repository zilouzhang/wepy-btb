<style lang="less">
@import '../../wxParse/wxParse.wxss';
page,
.container {
  background: #fff;
}
.head-banner {
  display: block;
  margin: 0 auto;
  width: 750rpx;
  height: 454rpx;
}
.title {
  padding: 68rpx 30rpx 46rpx;
  font-size: 40rpx;
  font-weight: 700;
  color: #1f1a17;
  line-height: 50rpx;
}
.timer {
  font-size: 32rpx;
  color: #1f1a17;
  text-align: center;
}
.article {
  padding: 40rpx 30rpx;
}
.btns {
  padding: 35rpx 0;
  font-size: 0;
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
}
.btns image,
.btns button {
  width: 222rpx;
  height: 104rpx;
}
.btns button {
  padding: 0;
  margin: 0 0 0 130rpx;
}
</style>
<template>
  <view class="container">
    <image class="head-banner" src="/images/detail/head.png"/>
    <view class="title">{{title}}</view>
    <view class="timer">{{timer}}</view>
    <import src="../../wxParse/wxParse.wxml" />
    <view class="article">
      <template is="wxParse" data="{{wxParseData: content.nodes}}"/>
    </view>
    <view class="btns">
      <image @tap="getSharePic" src="/images/detail/share.png" />
      <button open-type="share" hover-class="none">
        <image src="/images/detail/send.png" />
      </button>
    </view>
    <detailCanvas />
    <toast />
  </view>
</template>
<script>
import wepy from 'wepy';
import { Host } from 'config';
import { get } from 'utils';
import WxParse from 'wxParse/wxParse';
// components
import DetailCanvas from 'components/detail-canvas';
import Toast from 'components/toast';
export default class Detail extends wepy.page {
  data = {
    id: '0', // 文章id
    title: '',
    timer: '',
    desc: '', // 文章概要
    content: '',
    qrcode: '',
    tempFilePath: null
  };
  components = {
    detailCanvas: DetailCanvas,
    toast: Toast
  };
  methods = {
    getSharePic() {
      // 获取文章二维码
      get(`${Host}login/getWxcode`, {
        page: 'pages/detail/index',
        scene: encodeURIComponent(this.id),
        width: 105
      })
        .then(res => {
          this.$broadcast('getQrcode', this.desc, res);
        })
        .catch(err => {
          this.$invoke('toast', 'show', err || '获取分享参数失败');
        });
    }
  };
  // 获取文章数据
  getInit(id) {
    let _self = this;
    get(`${Host}detail/info`, {
      aid: id
    })
      .then(res => {
        let { title, time, desc, content } = res;
        this.id = id;
        this.title = title || '';
        this.timer = time || '';
        this.desc = desc || '';
        content = content || '';
        this.$apply();
        WxParse.wxParse('content', 'html', content, _self, 5);
      })
      .catch(err => {
        this.$invoke('toast', 'show', err);
      });
  }
  onLoad(e) {
    console.log(e);
    let { id } = e;
    this.getInit(id);
  }
}
</script>
